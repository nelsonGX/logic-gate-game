generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model GameRoom {
  id            String     @id @default(uuid())
  roomCode      String     @unique
  team          Int
  studentAmount Int
  answerString  String
  status        String     @default("waiting") // waiting, active, completed
  createdAt     DateTime   @default(now())
  updatedAt     DateTime   @updatedAt
  
  students      Student[]
}

model Student {
  id              String     @id @default(uuid())
  gameRoomId      String
  displayName     String
  assignedChar    String     // The character this student must solve (e.g., "A")
  charPosition    Int        // Position in the target string (0-based)
  targetBits      String     // 8-bit ASCII representation (e.g., "01000001")
  solvedChar      String?    // The solved character (null until completed)
  questions       String     // JSON array of questions with answers
  alphaAnswers    String?    // JSON array of Alpha group answers
  betaAnswers     String?    // JSON array of Beta group answers
  gammaAnswers    String?    // JSON array of Gamma group answers
  alphaCompleted  Boolean    @default(false)
  betaCompleted   Boolean    @default(false)
  gammaCompleted  Boolean    @default(false)
  isCompleted     Boolean    @default(false)
  completedAt     DateTime?
  
  gameRoom        GameRoom   @relation(fields: [gameRoomId], references: [id])
}